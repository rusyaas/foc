<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CVModel CVModel_0
{
	CVmeshList m_meshList = CVmeshList
	{
		CVmesh[] m_meshList = 
		[
			CVmesh
			{
				string m_meshName = "sakura"
				string m_meshFile = "models/sakura_fsn/sakura.fbx"
				string m_materialSearchPath = ""
				bool m_bSkinParentedObjects = true
				bool m_bLegacySkinParentedTransforms = false
				bool m_bExpensiveTangents = false
				bool m_bExpensiveVertices = false
				bool m_bIgnoreCloth = false
				bool m_bGetSkinningFromLod0 = false
				CVmorphInfo* m_pMorphInfo = NULL
			}
		]
	}
	CVClothProxyMeshList m_clothProxyMeshList = CVClothProxyMeshList
	{
		CVClothProxyMesh[] m_clothProxyMeshList = 
		[
			
		]
		float m_flClothEnableThreshold = 0.050000
		bool m_bCreateStaticBone = false
		int m_nMaxBonesPerVertex = 4
		bool m_bRemoveUnusedBonesEnabled = false
		bool m_bDriveMeshesWithBacksolvedJointsOnly = true
		float m_flMatchProxiesToMeshes = 1.000000
		float m_flReservedFloat = 0.000000
		int m_nReservedInt = 0
		bool m_bReservedBool1 = false
		bool m_bReservedBool2 = false
		bool m_bReservedBool3 = false
		bool m_bReservedBool4 = false
	}
	CVphysicsMeshList m_physicsMeshList = CVphysicsMeshList
	{
		CVphysicsMesh[] m_meshList = 
		[
			
		]
	}
	CVmodelInfo* m_pModelInfo = NULL
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVhitBoxSetListReference[] m_pHitBoxSetLists = 
	[
		CVhitBoxSetListReference
		{
			CVhitBoxSetList* m_pObject = &CVhitBoxSetList_0
			string m_sFileName = ""
		}
	]
	CVattachmentListReference[] m_pAttachmentLists = 
	[
		
	]
	CVanimGroupReference[] m_pAnimGroups = 
	[
		CVanimGroupReference
		{
			CVanimGroup* m_pObject = &CVanimGroup_0
			string m_sFileName = ""
		}
	]
	CVNodeMaterialGroupListReference m_pMaterialGroupList = CVNodeMaterialGroupListReference
	{
		NodeMaterialGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVMeshGroupListReference m_pMeshGroupList = CVMeshGroupListReference
	{
		MeshGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVLODGroupListReference m_pLodGroupList = CVLODGroupListReference
	{
		LODGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropBreakableListReference m_pPropBreakableList = CVpropBreakableListReference
	{
		CVpropBreakableList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropDataListReference m_pPropDataList = CVpropDataListReference
	{
		CVpropDataList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVConstraintListReference[] m_pConstraintLists = 
	[
		
	]
	string m_collision = ""
	string m_softbody = ""
	string m_sMDLFilename = ""
	string[] m_sOffsetHitboxSets = 
	[
		
	]
	float(3) m_vHitboxSetOffset = ( 0.000000, 0.000000, 0.000000 )
	string[] m_scriptFiles = 
	[
		
	]
	CVMaterialRemapList* m_pMaterialRemapList = &CVMaterialRemapList_0
	float m_flFbxScale = 1.000000
	float m_flQCScale = 1.000000
	float(3) m_vOrigin = ( 0.000000, 0.000000, 0.000000 )
	CVPsf* m_pvPsf = NULL
	string m_keyValueText = ""
	bool m_bStaticProp = false
	bool m_bEnableClothProcessing = true
	float m_flClothEnableThreshold = 0.050000
	int m_nMaxClothVertsPerMesh = 2048
	bool m_bBuildClothBoneHierarchy = false
	symbol m_nNavType = AUTH_NAV_MESH
	bool m_bMakeUniqueVMeshes = false
	bool m_bMakeImplicitBindPoseSequence = false
	bool m_bAdjustSkeletonFromBoneFlags = false
}

CVhitBoxSetList CVhitBoxSetList_0
{
	CVhitBoxSet[] m_HitBoxSets = 
	[
		CVhitBoxSet
		{
			string m_name = "default"
			CVhitBox[] m_HitBoxes = 
			[
				CVhitBox
				{
					string m_name = "bone_new65"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new65"
					float(3) m_vMinBounds = ( -8.616468, -6.964935, -1.966660 )
					float(3) m_vMaxBounds = ( 8.843290, 5.521168, 1.785576 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new64"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new64"
					float(3) m_vMinBounds = ( -8.418705, -4.568987, -1.776192 )
					float(3) m_vMaxBounds = ( 8.645527, 7.300591, 1.415184 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new3"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new3"
					float(3) m_vMinBounds = ( -9.561508, -8.778791, -9.490623 )
					float(3) m_vMaxBounds = ( 9.654709, 9.171289, 18.497490 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new2"
					float(3) m_vMinBounds = ( -4.262352, -4.880443, -0.866646 )
					float(3) m_vMaxBounds = ( 4.406377, 3.889119, 3.702950 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new1"
					float(3) m_vMinBounds = ( -8.500237, -10.478612, -6.808998 )
					float(3) m_vMaxBounds = ( 9.717131, 10.237195, 16.775864 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new48"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new48"
					float(3) m_vMinBounds = ( -8.171684, -5.627894, -5.019859 )
					float(3) m_vMaxBounds = ( 8.465420, 5.443559, -2.229980 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new67"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new67"
					float(3) m_vMinBounds = ( -11.815353, -7.100481, -9.164337 )
					float(3) m_vMaxBounds = ( 12.042192, 9.066845, 0.739937 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new49"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new49"
					float(3) m_vMinBounds = ( -8.173328, -5.661257, -0.194275 )
					float(3) m_vMaxBounds = ( 8.443518, 3.996849, 0.805702 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new69"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new69"
					float(3) m_vMinBounds = ( -9.748003, -8.138143, -36.185520 )
					float(3) m_vMaxBounds = ( 3.946053, 9.311116, -3.284058 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new68"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new68"
					float(3) m_vMinBounds = ( -3.719227, -8.138142, -36.185520 )
					float(3) m_vMaxBounds = ( 9.974840, 9.360556, -0.337303 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new50"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new50"
					float(3) m_vMinBounds = ( -8.202881, -6.376442, 0.444809 )
					float(3) m_vMaxBounds = ( 8.456432, 2.211246, 1.268219 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new47"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new47"
					float(3) m_vMinBounds = ( -1.673029, -2.197666, -1.908386 )
					float(3) m_vMaxBounds = ( 1.295387, 2.414479, 0.311813 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new70"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new70"
					float(3) m_vMinBounds = ( -8.374947, -9.528549, -36.391857 )
					float(3) m_vMaxBounds = ( 5.624302, 8.158901, 3.376240 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new73"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new73"
					float(3) m_vMinBounds = ( -5.727647, -8.264378, -36.467754 )
					float(3) m_vMaxBounds = ( 8.271616, 9.423073, 1.211090 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new51"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new51"
					float(3) m_vMinBounds = ( -7.984459, -6.706250, 0.837494 )
					float(3) m_vMaxBounds = ( 8.384716, 0.762784, 1.949921 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new62"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new62"
					float(3) m_vMinBounds = ( -1.584349, -2.306234, -2.609756 )
					float(3) m_vMaxBounds = ( 1.361761, 2.441875, 1.472855 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new6"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new6"
					float(3) m_vMinBounds = ( -27.111076, -3.709955, -5.553391 )
					float(3) m_vMaxBounds = ( -0.129377, 5.683290, 3.290237 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new4"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new4"
					float(3) m_vMinBounds = ( 0.412390, -3.971760, -5.629532 )
					float(3) m_vMaxBounds = ( 26.112175, 5.421486, 3.214096 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new71"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new71"
					float(3) m_vMinBounds = ( -3.629533, -2.869631, -7.893794 )
					float(3) m_vMaxBounds = ( 2.480797, 4.812881, 1.727521 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new74"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new74"
					float(3) m_vMinBounds = ( -2.253974, -2.869631, -7.893802 )
					float(3) m_vMaxBounds = ( 3.856373, 4.812881, 1.727513 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new52"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new52"
					float(3) m_vMinBounds = ( -7.507798, -4.738158, 0.699944 )
					float(3) m_vMaxBounds = ( 7.847739, 1.293833, 1.732445 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new54"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new54"
					float(3) m_vMinBounds = ( -1.756084, -2.099726, -3.080521 )
					float(3) m_vMaxBounds = ( 1.227200, 2.711020, 0.688896 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new7"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new7"
					float(3) m_vMinBounds = ( -22.536213, -4.832620, -3.397438 )
					float(3) m_vMaxBounds = ( 0.332329, 3.368836, 3.904404 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new5"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new5"
					float(3) m_vMinBounds = ( -0.873142, -5.104890, -4.145607 )
					float(3) m_vMaxBounds = ( 22.708561, 3.096566, 3.156235 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new72"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new72"
					float(3) m_vMinBounds = ( -4.290020, -4.746809, -2.334527 )
					float(3) m_vMaxBounds = ( 3.218694, 3.148706, 3.135414 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new75"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new75"
					float(3) m_vMinBounds = ( -3.335881, -4.684998, -2.556614 )
					float(3) m_vMaxBounds = ( 4.172851, 3.210517, 2.913326 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new92"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new92"
					float(3) m_vMinBounds = ( -2.000000, -2.000000, -2.000000 )
					float(3) m_vMaxBounds = ( 2.000000, 2.000000, 2.000000 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new85"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new85"
					float(3) m_vMinBounds = ( 1.381436, -0.789953, -5.408974 )
					float(3) m_vMaxBounds = ( 4.595383, 0.223589, -5.094749 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new96"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new96"
					float(3) m_vMinBounds = ( 0.654967, -4.044412, -5.643311 )
					float(3) m_vMaxBounds = ( 2.781399, 4.064018, -3.741692 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new94"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new94"
					float(3) m_vMinBounds = ( -1.264974, -0.007733, -6.869102 )
					float(3) m_vMaxBounds = ( 7.479312, 1.731069, -6.745415 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new53"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new53"
					float(3) m_vMinBounds = ( -7.136742, -2.164017, -1.027771 )
					float(3) m_vMaxBounds = ( 5.819511, 2.174623, 4.415390 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new63"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new63"
					float(3) m_vMinBounds = ( -2.032510, -2.013802, -5.813629 )
					float(3) m_vMaxBounds = ( 1.055326, 2.753357, 1.241943 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new30"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new30"
					float(3) m_vMinBounds = ( -12.102566, -5.390602, -4.032272 )
					float(3) m_vMaxBounds = ( 1.255714, 3.250805, 2.099541 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new98"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new98"
					float(3) m_vMinBounds = ( -1.779194, -1.722748, -1.672920 )
					float(3) m_vMaxBounds = ( 0.751320, 2.153080, 1.901337 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new8"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new8"
					float(3) m_vMinBounds = ( 0.238495, -5.390602, -4.032272 )
					float(3) m_vMaxBounds = ( 14.489414, 3.250805, 2.099541 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				}
			]
		}
	]
}

CVanimGroup CVanimGroup_0
{
	string m_Name = ""
	CVReferenceSkeletonReference m_pReferenceSkeleton = CVReferenceSkeletonReference
	{
		CVReferenceSkeleton* m_pObject = NULL
		string m_sFileName = ""
	}
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVseqGroupReference m_pSeqGroup = CVseqGroupReference
	{
		CVseqGroup* m_pObject = NULL
		string m_sFileName = ""
	}
	CVanimGroupReference[] m_pAnimGroups = 
	[
		
	]
	CVanim[] m_Vanim = 
	[
		CVanim
		{
			string m_Animationname = "sakura_anim"
			string m_Filepath = "models/sakura_fsn/sakura_anim.FBX"
			int m_nStartframe = 30
			int m_nEndframe = 93
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "run"
			string m_Filepath = "models/sakura_fsn/sakura_anim.FBX"
			int m_nStartframe = 94
			int m_nEndframe = 116
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_RUN"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "atk1"
			string m_Filepath = "models/sakura_fsn/sakura_anim.FBX"
			int m_nStartframe = 256
			int m_nEndframe = 275
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "atk2"
			string m_Filepath = "models/sakura_fsn/sakura_anim.FBX"
			int m_nStartframe = 320
			int m_nEndframe = 337
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "cast1"
			string m_Filepath = "models/sakura_fsn/sakura_anim.FBX"
			int m_nStartframe = 444
			int m_nEndframe = 464
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_1"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "cast2"
			string m_Filepath = "models/sakura_fsn/sakura_anim.FBX"
			int m_nStartframe = 556
			int m_nEndframe = 608
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "cast3"
			string m_Filepath = "models/sakura_fsn/sakura_anim.FBX"
			int m_nStartframe = 504
			int m_nEndframe = 527
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_3"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "die"
			string m_Filepath = "models/sakura_fsn/sakura_anim.FBX"
			int m_nStartframe = 910
			int m_nEndframe = 935
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_DIE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "cast5"
			string m_Filepath = "models/sakura_fsn/sakura_anim.FBX"
			int m_nStartframe = 786
			int m_nEndframe = 806
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_5"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		}
	]
	string[] m_sScripts = 
	[
		
	]
}

CVMaterialRemapList CVMaterialRemapList_0
{
	CVMaterialRemap[] m_vMaterialRemapList = 
	[
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported1.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported2.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported4.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported3.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported9.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported10.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported11.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported12.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported13.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported14.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported15.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported16.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported17.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported18.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported5.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported6.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported7.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported8.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "milkshapeexported19.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = ".vmat.vmat"
			string m_sReplaceMaterial = "materials/sakura_fsn.vmat"
		}
	]
}