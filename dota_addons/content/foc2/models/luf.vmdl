<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CVModel CVModel_0
{
	CVmeshList m_meshList = CVmeshList
	{
		CVmesh[] m_meshList = 
		[
			CVmesh
			{
				string m_meshName = "luf"
				string m_meshFile = "models/luf.fbx"
				string m_materialSearchPath = ""
				bool m_bSkinParentedObjects = true
				bool m_bLegacySkinParentedTransforms = false
				bool m_bExpensiveTangents = false
				bool m_bExpensiveVertices = false
				bool m_bIgnoreCloth = false
				bool m_bGetSkinningFromLod0 = false
				CVmorphInfo* m_pMorphInfo = NULL
			}
		]
	}
	CVClothProxyMeshList m_clothProxyMeshList = CVClothProxyMeshList
	{
		CVClothProxyMesh[] m_clothProxyMeshList = 
		[
			
		]
		float m_flClothEnableThreshold = 0.050000
		bool m_bCreateStaticBone = false
		int m_nMaxBonesPerVertex = 4
		bool m_bRemoveUnusedBonesEnabled = false
		bool m_bDriveMeshesWithBacksolvedJointsOnly = true
		float m_flMatchProxiesToMeshes = 1.000000
		float m_flReservedFloat = 0.000000
		int m_nReservedInt = 0
		bool m_bReservedBool1 = false
		bool m_bReservedBool2 = false
		bool m_bReservedBool3 = false
		bool m_bReservedBool4 = false
	}
	CVphysicsMeshList m_physicsMeshList = CVphysicsMeshList
	{
		CVphysicsMesh[] m_meshList = 
		[
			
		]
	}
	CVmodelInfo* m_pModelInfo = NULL
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVhitBoxSetListReference[] m_pHitBoxSetLists = 
	[
		CVhitBoxSetListReference
		{
			CVhitBoxSetList* m_pObject = &CVhitBoxSetList_0
			string m_sFileName = ""
		}
	]
	CVattachmentListReference[] m_pAttachmentLists = 
	[
		CVattachmentListReference
		{
			CVattachmentList* m_pObject = &CVattachmentList_0
			string m_sFileName = ""
		}
	]
	CVanimGroupReference[] m_pAnimGroups = 
	[
		CVanimGroupReference
		{
			CVanimGroup* m_pObject = &CVanimGroup_0
			string m_sFileName = ""
		}
	]
	CVNodeMaterialGroupListReference m_pMaterialGroupList = CVNodeMaterialGroupListReference
	{
		NodeMaterialGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVMeshGroupListReference m_pMeshGroupList = CVMeshGroupListReference
	{
		MeshGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVLODGroupListReference m_pLodGroupList = CVLODGroupListReference
	{
		LODGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropBreakableListReference m_pPropBreakableList = CVpropBreakableListReference
	{
		CVpropBreakableList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropDataListReference m_pPropDataList = CVpropDataListReference
	{
		CVpropDataList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVConstraintListReference[] m_pConstraintLists = 
	[
		
	]
	string m_collision = ""
	string m_softbody = ""
	string m_sMDLFilename = ""
	string[] m_sOffsetHitboxSets = 
	[
		
	]
	float(3) m_vHitboxSetOffset = ( 0.000000, 0.000000, 0.000000 )
	string[] m_scriptFiles = 
	[
		
	]
	CVMaterialRemapList* m_pMaterialRemapList = &CVMaterialRemapList_0
	float m_flFbxScale = 1.000000
	float m_flQCScale = 1.000000
	float(3) m_vOrigin = ( 0.000000, 0.000000, 0.000000 )
	CVPsf* m_pvPsf = NULL
	string m_keyValueText = ""
	bool m_bStaticProp = false
	bool m_bEnableClothProcessing = true
	float m_flClothEnableThreshold = 0.050000
	int m_nMaxClothVertsPerMesh = 2048
	bool m_bBuildClothBoneHierarchy = false
	symbol m_nNavType = AUTH_NAV_MESH
	bool m_bMakeUniqueVMeshes = false
	bool m_bMakeImplicitBindPoseSequence = false
	bool m_bAdjustSkeletonFromBoneFlags = false
}

CVhitBoxSetList CVhitBoxSetList_0
{
	CVhitBoxSet[] m_HitBoxSets = 
	[
		CVhitBoxSet
		{
			string m_name = "default"
			CVhitBox[] m_HitBoxes = 
			[
				CVhitBox
				{
					string m_name = "Point06"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point06"
					float(3) m_vMinBounds = ( -11.940970, -7.196702, -8.324150 )
					float(3) m_vMaxBounds = ( 11.934026, 7.709546, 5.675850 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point05"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point05"
					float(3) m_vMinBounds = ( -10.503470, -6.884202, -7.228401 )
					float(3) m_vMaxBounds = ( 10.496526, 7.209547, 11.271599 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point04"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point04"
					float(3) m_vMinBounds = ( -10.253470, -7.387403, -1.795784 )
					float(3) m_vMaxBounds = ( 10.309026, 5.831347, 10.204216 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point27"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point27"
					float(3) m_vMinBounds = ( -17.003469, -7.185223, -7.220100 )
					float(3) m_vMaxBounds = ( 16.996523, 17.814772, 25.279907 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point03"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point03"
					float(3) m_vMinBounds = ( -26.453098, -3.998002, -5.423027 )
					float(3) m_vMaxBounds = ( 0.421896, 4.126997, 3.076981 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point20"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point20"
					float(3) m_vMinBounds = ( -0.428841, -3.998002, -5.423027 )
					float(3) m_vMaxBounds = ( 26.446154, 4.126997, 3.076981 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point18"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point18"
					float(3) m_vMinBounds = ( -11.878470, -5.022075, -9.304405 )
					float(3) m_vMaxBounds = ( 11.871526, 0.399800, 0.195595 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point07"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point07"
					float(3) m_vMinBounds = ( -6.350713, -7.064417, -37.569622 )
					float(3) m_vMaxBounds = ( 6.563347, 7.248082, 1.680382 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point24"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point24"
					float(3) m_vMinBounds = ( -6.562480, -7.064417, -37.569622 )
					float(3) m_vMaxBounds = ( 6.343768, 7.248082, 1.680382 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point02"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point02"
					float(3) m_vMinBounds = ( -24.403511, -3.786784, -4.217751 )
					float(3) m_vMaxBounds = ( 0.596489, 4.791340, 3.782242 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point19"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point19"
					float(3) m_vMinBounds = ( -0.603432, -3.786787, -4.217751 )
					float(3) m_vMaxBounds = ( 24.396568, 4.791337, 3.782242 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point11"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point11"
					float(3) m_vMinBounds = ( -3.690972, -3.822006, -2.583939 )
					float(3) m_vMaxBounds = ( 3.699652, 3.881118, 5.416061 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point22"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point22"
					float(3) m_vMinBounds = ( -3.211593, -1.484013, -10.201836 )
					float(3) m_vMaxBounds = ( 4.382156, 7.312861, 0.298164 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point16"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point16"
					float(3) m_vMinBounds = ( -4.389102, -1.484012, -10.201836 )
					float(3) m_vMaxBounds = ( 3.235898, 7.312862, 0.298164 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point14"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point14"
					float(3) m_vMinBounds = ( -1.572125, -1.958849, -8.674400 )
					float(3) m_vMaxBounds = ( 2.677874, 1.353651, -0.674400 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point08"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point08"
					float(3) m_vMinBounds = ( -4.119663, -3.563735, -34.436665 )
					float(3) m_vMaxBounds = ( 3.817836, 3.905014, 0.063339 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point25"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point25"
					float(3) m_vMinBounds = ( -3.809156, -3.563738, -34.436668 )
					float(3) m_vMaxBounds = ( 4.112718, 3.905011, 0.063335 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point01"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point01"
					float(3) m_vMinBounds = ( -9.811657, -4.667770, -4.248970 )
					float(3) m_vMaxBounds = ( 0.688335, 3.425980, 1.751022 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point21"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point21"
					float(3) m_vMinBounds = ( -0.695278, -4.667773, -4.248970 )
					float(3) m_vMaxBounds = ( 10.054714, 3.425977, 1.751022 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point12"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point12"
					float(3) m_vMinBounds = ( -10.378470, -12.111809, -4.469727 )
					float(3) m_vMaxBounds = ( 10.746526, 10.638187, 19.530273 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point23"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point23"
					float(3) m_vMinBounds = ( -3.396677, -2.882987, -11.561562 )
					float(3) m_vMaxBounds = ( 5.415822, 7.101387, -0.061562 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point15"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point15"
					float(3) m_vMinBounds = ( -5.360267, -2.882985, -11.561562 )
					float(3) m_vMaxBounds = ( 3.389732, 7.101389, -0.061562 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point17"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point17"
					float(3) m_vMinBounds = ( -12.315970, -6.302053, -10.950005 )
					float(3) m_vMaxBounds = ( 12.309026, 1.205757, 0.049995 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point13"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point13"
					float(3) m_vMinBounds = ( -2.067108, -1.550969, -12.488762 )
					float(3) m_vMaxBounds = ( 2.870392, 3.206844, -0.488762 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point09"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point09"
					float(3) m_vMinBounds = ( -8.088020, -18.136415, -12.676857 )
					float(3) m_vMaxBounds = ( 3.693227, 6.051081, 0.608300 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Point26"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Point26"
					float(3) m_vMinBounds = ( -3.700171, -18.136423, -12.676865 )
					float(3) m_vMaxBounds = ( 8.081076, 6.051075, 0.608293 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				}
			]
		}
	]
}

CVattachmentList CVattachmentList_0
{
	string m_name = ""
	CVattachment[] m_attachments = 
	[
		CVattachment
		{
			string m_name = "attach_origin"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "Point12"
					float(3) m_vTranslationOffset = ( 0.000000, 0.000000, 0.000000 )
					float(3) m_vRotationOffset = ( 0.000000, 0.000000, 0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		},
		CVattachment
		{
			string m_name = "attach_hitloc"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "Point01"
					float(3) m_vTranslationOffset = ( 0.000000, 0.000000, 0.000000 )
					float(3) m_vRotationOffset = ( 0.000000, 0.000000, 0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		}
	]
}

CVanimGroup CVanimGroup_0
{
	string m_Name = ""
	CVReferenceSkeletonReference m_pReferenceSkeleton = CVReferenceSkeletonReference
	{
		CVReferenceSkeleton* m_pObject = NULL
		string m_sFileName = ""
	}
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVseqGroupReference m_pSeqGroup = CVseqGroupReference
	{
		CVseqGroup* m_pObject = NULL
		string m_sFileName = ""
	}
	CVanimGroupReference[] m_pAnimGroups = 
	[
		
	]
	CVanim[] m_Vanim = 
	[
		CVanim
		{
			string m_Animationname = "run"
			string m_Filepath = "models/luf_anim.FBX"
			int m_nStartframe = 10
			int m_nEndframe = 36
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_RUN"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "atk"
			string m_Filepath = "models/luf_anim.FBX"
			int m_nStartframe = 418
			int m_nEndframe = 446
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "cast3"
			string m_Filepath = "models/luf_anim.FBX"
			int m_nStartframe = 512
			int m_nEndframe = 587
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_3"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "channel1"
			string m_Filepath = "models/luf_anim.FBX"
			int m_nStartframe = 762
			int m_nEndframe = 767
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CHANNEL_ABILITY_1"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "idle"
			string m_Filepath = "models/luf_anim.FBX"
			int m_nStartframe = 365
			int m_nEndframe = 401
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "atk2"
			string m_Filepath = "models/luf_anim.FBX"
			int m_nStartframe = 466
			int m_nEndframe = 486
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "cast"
			string m_Filepath = "models/luf_anim.FBX"
			int m_nStartframe = 571
			int m_nEndframe = 598
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_1"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "cast2"
			string m_Filepath = "models/luf_anim.FBX"
			int m_nStartframe = 685
			int m_nEndframe = 759
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "cast1_end"
			string m_Filepath = "models/luf_anim.FBX"
			int m_nStartframe = 425
			int m_nEndframe = 441
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_1_END"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		}
	]
	string[] m_sScripts = 
	[
		
	]
}

CVMaterialRemapList CVMaterialRemapList_0
{
	CVMaterialRemap[] m_vMaterialRemapList = 
	[
		CVMaterialRemap
		{
			string m_sSearchMaterial = "lufei161.vmat"
			string m_sReplaceMaterial = "materials/luffy/luf1.vmat"
		}
	]
}