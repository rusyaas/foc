<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CVModel CVModel_0
{
	CVmeshList m_meshList = CVmeshList
	{
		CVmesh[] m_meshList = 
		[
			CVmesh
			{
				string m_meshName = "miku"
				string m_meshFile = "models/miku.fbx"
				string m_materialSearchPath = ""
				bool m_bSkinParentedObjects = true
				bool m_bLegacySkinParentedTransforms = false
				bool m_bExpensiveTangents = false
				bool m_bExpensiveVertices = false
				bool m_bIgnoreCloth = false
				bool m_bGetSkinningFromLod0 = false
				CVmorphInfo* m_pMorphInfo = NULL
			}
		]
	}
	CVClothProxyMeshList m_clothProxyMeshList = CVClothProxyMeshList
	{
		CVClothProxyMesh[] m_clothProxyMeshList = 
		[
			
		]
		float m_flClothEnableThreshold = 0.050000
		bool m_bCreateStaticBone = false
		int m_nMaxBonesPerVertex = 4
		bool m_bRemoveUnusedBonesEnabled = false
		bool m_bDriveMeshesWithBacksolvedJointsOnly = true
		float m_flMatchProxiesToMeshes = 1.000000
		float m_flReservedFloat = 0.000000
		int m_nReservedInt = 0
		bool m_bReservedBool1 = false
		bool m_bReservedBool2 = false
		bool m_bReservedBool3 = false
		bool m_bReservedBool4 = false
	}
	CVphysicsMeshList m_physicsMeshList = CVphysicsMeshList
	{
		CVphysicsMesh[] m_meshList = 
		[
			
		]
	}
	CVmodelInfo* m_pModelInfo = NULL
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVhitBoxSetListReference[] m_pHitBoxSetLists = 
	[
		CVhitBoxSetListReference
		{
			CVhitBoxSetList* m_pObject = &CVhitBoxSetList_0
			string m_sFileName = ""
		}
	]
	CVattachmentListReference[] m_pAttachmentLists = 
	[
		CVattachmentListReference
		{
			CVattachmentList* m_pObject = &CVattachmentList_0
			string m_sFileName = ""
		}
	]
	CVanimGroupReference[] m_pAnimGroups = 
	[
		CVanimGroupReference
		{
			CVanimGroup* m_pObject = &CVanimGroup_0
			string m_sFileName = ""
		}
	]
	CVNodeMaterialGroupListReference m_pMaterialGroupList = CVNodeMaterialGroupListReference
	{
		NodeMaterialGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVMeshGroupListReference m_pMeshGroupList = CVMeshGroupListReference
	{
		MeshGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVLODGroupListReference m_pLodGroupList = CVLODGroupListReference
	{
		LODGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropBreakableListReference m_pPropBreakableList = CVpropBreakableListReference
	{
		CVpropBreakableList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropDataListReference m_pPropDataList = CVpropDataListReference
	{
		CVpropDataList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVConstraintListReference[] m_pConstraintLists = 
	[
		
	]
	string m_collision = ""
	string m_softbody = ""
	string m_sMDLFilename = ""
	string[] m_sOffsetHitboxSets = 
	[
		
	]
	float(3) m_vHitboxSetOffset = ( 0.000000, 0.000000, 0.000000 )
	string[] m_scriptFiles = 
	[
		
	]
	CVMaterialRemapList* m_pMaterialRemapList = &CVMaterialRemapList_0
	float m_flFbxScale = 1.000000
	float m_flQCScale = 1.000000
	float(3) m_vOrigin = ( 0.000000, 0.000000, 0.000000 )
	CVPsfList* m_pPsfList = NULL
	string m_keyValueText = ""
	bool m_bStaticProp = false
	bool m_bEnableClothProcessing = true
	float m_flClothEnableThreshold = 0.050000
	int m_nMaxClothVertsPerMesh = 2048
	bool m_bBuildClothBoneHierarchy = false
	symbol m_nNavType = AUTH_NAV_MESH
	bool m_bMakeUniqueVMeshes = false
	bool m_bMakeImplicitBindPoseSequence = false
	bool m_bAdjustSkeletonFromBoneFlags = false
}

CVhitBoxSetList CVhitBoxSetList_0
{
	CVhitBoxSet[] m_HitBoxSets = 
	[
		CVhitBoxSet
		{
			string m_name = "default"
			CVhitBox[] m_HitBoxes = 
			[
				CVhitBox
				{
					string m_name = "Bone02"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone02"
					float(3) m_vMinBounds = ( -44.992584, -16.016293, -87.392410 )
					float(3) m_vMaxBounds = ( 45.085114, 53.056309, 63.985931 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone03"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone03"
					float(3) m_vMinBounds = ( -9.952308, -14.347696, -17.366562 )
					float(3) m_vMaxBounds = ( 9.694964, 6.441465, 18.391907 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone04"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone04"
					float(3) m_vMinBounds = ( -15.062778, -16.065140, -11.304680 )
					float(3) m_vMaxBounds = ( 13.701659, 9.888069, 29.255432 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone19"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone19"
					float(3) m_vMinBounds = ( -20.403759, -2.321301, -9.532486 )
					float(3) m_vMaxBounds = ( 18.362606, 6.719211, 4.963135 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone05"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone05"
					float(3) m_vMinBounds = ( -12.578387, -5.760709, -33.578033 )
					float(3) m_vMaxBounds = ( 6.457320, 9.543621, 8.728264 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bonea65"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bonea65"
					float(3) m_vMinBounds = ( -6.633146, -5.760708, -33.578033 )
					float(3) m_vMaxBounds = ( 12.246286, 9.543621, 10.540573 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone20"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone20"
					float(3) m_vMinBounds = ( -34.203102, -2.656225, -33.846947 )
					float(3) m_vMaxBounds = ( 34.240433, 9.552703, 4.828316 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone08"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone08"
					float(3) m_vMinBounds = ( -15.669098, -4.556655, -11.798592 )
					float(3) m_vMaxBounds = ( 1.939160, 3.633697, 3.221107 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone58"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone58"
					float(3) m_vMinBounds = ( -2.951374, -4.713483, -10.713394 )
					float(3) m_vMaxBounds = ( 15.553078, 3.761052, 4.104805 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone06"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone06"
					float(3) m_vMinBounds = ( -4.695978, -4.484760, -31.400932 )
					float(3) m_vMaxBounds = ( 4.466276, 5.951254, 1.024139 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "BoneA66"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "BoneA66"
					float(3) m_vMinBounds = ( -4.228322, -4.500733, -32.228790 )
					float(3) m_vMaxBounds = ( 4.933929, 5.935281, 3.512672 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone26"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone26"
					float(3) m_vMinBounds = ( -31.842464, -1.905079, -35.067696 )
					float(3) m_vMaxBounds = ( 31.934986, 14.614420, 1.018829 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone09"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone09"
					float(3) m_vMinBounds = ( -24.447174, -8.301398, -15.246582 )
					float(3) m_vMaxBounds = ( 1.011290, 9.797490, 2.557320 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone42"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone42"
					float(3) m_vMinBounds = ( -0.889069, -8.301388, -15.246582 )
					float(3) m_vMaxBounds = ( 24.569408, 9.797501, 2.916519 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone63"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone63"
					float(3) m_vMinBounds = ( -3.658109, -8.612791, -10.061343 )
					float(3) m_vMaxBounds = ( 4.006036, 3.350556, 2.348808 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "BoneA67"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "BoneA67"
					float(3) m_vMinBounds = ( -3.198739, -8.589384, -10.073115 )
					float(3) m_vMaxBounds = ( 4.290136, 3.319476, 2.337036 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone28"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone28"
					float(3) m_vMinBounds = ( -44.992584, 1.448675, -61.985611 )
					float(3) m_vMaxBounds = ( 45.085114, 31.364225, 10.631981 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone15"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone15"
					float(3) m_vMinBounds = ( -7.866990, -6.983563, -7.791580 )
					float(3) m_vMaxBounds = ( 1.641281, 4.771602, 3.560120 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone62"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone62"
					float(3) m_vMinBounds = ( -1.297558, -6.983564, -7.791580 )
					float(3) m_vMaxBounds = ( 8.218618, 4.771601, 3.560120 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone10"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone10"
					float(3) m_vMinBounds = ( -13.456657, -6.010215, -9.662033 )
					float(3) m_vMaxBounds = ( -1.679886, 2.956937, 0.725708 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone43"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone43"
					float(3) m_vMinBounds = ( 1.863201, -6.046805, -9.662033 )
					float(3) m_vMaxBounds = ( 13.554829, 2.956946, 0.725708 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone64"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone64"
					float(3) m_vMinBounds = ( -0.509013, -9.019272, -2.442688 )
					float(3) m_vMaxBounds = ( 6.016016, 2.735491, 3.404969 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "BoneA68"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "BoneA68"
					float(3) m_vMinBounds = ( -5.304372, -9.055172, -2.428288 )
					float(3) m_vMaxBounds = ( 1.395402, 2.512176, 3.419369 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				}
			]
		}
	]
}

CVattachmentList CVattachmentList_0
{
	string m_name = ""
	CVattachment[] m_attachments = 
	[
		CVattachment
		{
			string m_name = "attach_origin"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "Bone10"
					float(3) m_vTranslationOffset = ( 0.000000, 0.000000, 0.000000 )
					float(3) m_vRotationOffset = ( 0.000000, 0.000000, 0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		},
		CVattachment
		{
			string m_name = "attach_hitloc"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "Bone20"
					float(3) m_vTranslationOffset = ( 0.000000, 0.000000, 0.000000 )
					float(3) m_vRotationOffset = ( 0.000000, 0.000000, 0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		},
		CVattachment
		{
			string m_name = "attach_attack1"
			CVattachmentInfluence[] m_influences = 
			[
				CVattachmentInfluence
				{
					string m_influenceName = "Bone10"
					float(3) m_vTranslationOffset = ( 0.000000, 0.000000, 0.000000 )
					float(3) m_vRotationOffset = ( 0.000000, 0.000000, 0.000000 )
					float m_flWeight = 1.000000
					bool m_bRoot = false
				}
			]
		}
	]
}

CVanimGroup CVanimGroup_0
{
	string m_Name = ""
	CVReferenceSkeletonReference m_pReferenceSkeleton = CVReferenceSkeletonReference
	{
		CVReferenceSkeleton* m_pObject = NULL
		string m_sFileName = ""
	}
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVseqGroupReference m_pSeqGroup = CVseqGroupReference
	{
		CVseqGroup* m_pObject = NULL
		string m_sFileName = ""
	}
	CVanimGroupReference[] m_pAnimGroups = 
	[
		
	]
	CVanim[] m_Vanim = 
	[
		CVanim
		{
			string m_Animationname = "miku_anim"
			string m_Filepath = "models/miku_anim.FBX"
			int m_nStartframe = 14
			int m_nEndframe = 15
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			bool m_bDisable = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "atk1"
			string m_Filepath = "models/miku_anim.FBX"
			int m_nStartframe = 116
			int m_nEndframe = 138
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			bool m_bDisable = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "run"
			string m_Filepath = "models/miku_anim.FBX"
			int m_nStartframe = 59
			int m_nEndframe = 90
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			bool m_bDisable = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_RUN"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "cast1"
			string m_Filepath = "models/miku_anim.FBX"
			int m_nStartframe = 153
			int m_nEndframe = 176
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			bool m_bDisable = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_1"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "death"
			string m_Filepath = "models/miku_anim.FBX"
			int m_nStartframe = 255
			int m_nEndframe = 294
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			bool m_bDisable = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_DIE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		}
	]
	string[] m_sScripts = 
	[
		
	]
}

CVMaterialRemapList CVMaterialRemapList_0
{
	CVMaterialRemap[] m_vMaterialRemapList = 
	[
		CVMaterialRemap
		{
			string m_sSearchMaterial = "531.vmat"
			string m_sReplaceMaterial = "materials/miku.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "532.vmat"
			string m_sReplaceMaterial = "materials/miku.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "533.vmat"
			string m_sReplaceMaterial = "materials/miku.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "534.vmat"
			string m_sReplaceMaterial = "materials/miku.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "535.vmat"
			string m_sReplaceMaterial = "materials/miku.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "536.vmat"
			string m_sReplaceMaterial = "materials/miku.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "537.vmat"
			string m_sReplaceMaterial = "materials/miku.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "538.vmat"
			string m_sReplaceMaterial = "materials/miku.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "539.vmat"
			string m_sReplaceMaterial = "materials/miku.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "*"
			string m_sReplaceMaterial = "materials/miku.vmat"
		}
	]
}