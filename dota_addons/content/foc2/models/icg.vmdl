<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CVModel CVModel_0
{
	CVmeshList m_meshList = CVmeshList
	{
		CVmesh[] m_meshList = 
		[
			CVmesh
			{
				string m_meshName = "icg"
				string m_meshFile = "models/icg.fbx"
				string m_materialSearchPath = ""
				bool m_bSkinParentedObjects = true
				bool m_bLegacySkinParentedTransforms = false
				bool m_bExpensiveTangents = false
				bool m_bExpensiveVertices = false
				bool m_bIgnoreCloth = false
				bool m_bGetSkinningFromLod0 = false
				CVmorphInfo* m_pMorphInfo = NULL
			}
		]
	}
	CVClothProxyMeshList m_clothProxyMeshList = CVClothProxyMeshList
	{
		CVClothProxyMesh[] m_clothProxyMeshList = 
		[
			
		]
		float m_flClothEnableThreshold = 0.050000
		bool m_bCreateStaticBone = false
		int m_nMaxBonesPerVertex = 4
		bool m_bRemoveUnusedBonesEnabled = false
		bool m_bDriveMeshesWithBacksolvedJointsOnly = true
		float m_flMatchProxiesToMeshes = 1.000000
		float m_flReservedFloat = 0.000000
		int m_nReservedInt = 0
		bool m_bReservedBool1 = false
		bool m_bReservedBool2 = false
		bool m_bReservedBool3 = false
		bool m_bReservedBool4 = false
	}
	CVphysicsMeshList m_physicsMeshList = CVphysicsMeshList
	{
		CVphysicsMesh[] m_meshList = 
		[
			
		]
	}
	CVmodelInfo* m_pModelInfo = NULL
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVhitBoxSetListReference[] m_pHitBoxSetLists = 
	[
		CVhitBoxSetListReference
		{
			CVhitBoxSetList* m_pObject = &CVhitBoxSetList_0
			string m_sFileName = ""
		}
	]
	CVattachmentListReference[] m_pAttachmentLists = 
	[
		
	]
	CVanimGroupReference[] m_pAnimGroups = 
	[
		CVanimGroupReference
		{
			CVanimGroup* m_pObject = &CVanimGroup_0
			string m_sFileName = ""
		}
	]
	CVNodeMaterialGroupListReference m_pMaterialGroupList = CVNodeMaterialGroupListReference
	{
		NodeMaterialGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVMeshGroupListReference m_pMeshGroupList = CVMeshGroupListReference
	{
		MeshGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVLODGroupListReference m_pLodGroupList = CVLODGroupListReference
	{
		LODGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropBreakableListReference m_pPropBreakableList = CVpropBreakableListReference
	{
		CVpropBreakableList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropDataListReference m_pPropDataList = CVpropDataListReference
	{
		CVpropDataList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVConstraintListReference[] m_pConstraintLists = 
	[
		
	]
	string m_collision = ""
	string m_softbody = ""
	string m_sMDLFilename = ""
	string[] m_sOffsetHitboxSets = 
	[
		
	]
	float(3) m_vHitboxSetOffset = ( 0.000000, 0.000000, 0.000000 )
	string[] m_scriptFiles = 
	[
		
	]
	CVMaterialRemapList* m_pMaterialRemapList = &CVMaterialRemapList_0
	float m_flFbxScale = 1.000000
	float m_flQCScale = 1.000000
	float(3) m_vOrigin = ( 0.000000, 0.000000, 0.000000 )
	CVPsf* m_pvPsf = NULL
	string m_keyValueText = ""
	bool m_bStaticProp = false
	bool m_bEnableClothProcessing = true
	float m_flClothEnableThreshold = 0.050000
	int m_nMaxClothVertsPerMesh = 2048
	bool m_bBuildClothBoneHierarchy = false
	symbol m_nNavType = AUTH_NAV_MESH
	bool m_bMakeUniqueVMeshes = false
	bool m_bMakeImplicitBindPoseSequence = false
	bool m_bAdjustSkeletonFromBoneFlags = false
}

CVhitBoxSetList CVhitBoxSetList_0
{
	CVhitBoxSet[] m_HitBoxSets = 
	[
		CVhitBoxSet
		{
			string m_name = "default"
			CVhitBox[] m_HitBoxes = 
			[
				CVhitBox
				{
					string m_name = "Bone01"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone01"
					float(3) m_vMinBounds = ( -14.994398, -9.402878, 0.230766 )
					float(3) m_vMaxBounds = ( 14.994398, 11.403618, 16.792267 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone02"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone02"
					float(3) m_vMinBounds = ( -10.154799, -8.545794, -1.703209 )
					float(3) m_vMaxBounds = ( 10.154799, 7.539365, 11.980888 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone03"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone03"
					float(3) m_vMinBounds = ( -13.487098, -8.784317, -0.536652 )
					float(3) m_vMaxBounds = ( 13.487098, 9.231182, 18.715347 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone12"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone12"
					float(3) m_vMinBounds = ( -15.624515, -4.612338, -7.710075 )
					float(3) m_vMaxBounds = ( -0.113816, 5.651860, 3.020424 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone13"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone13"
					float(3) m_vMinBounds = ( -23.987698, -4.155830, -3.993217 )
					float(3) m_vMaxBounds = ( 0.058397, 7.678339, 4.257782 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone16"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone16"
					float(3) m_vMinBounds = ( 0.437495, -4.612338, -7.710075 )
					float(3) m_vMaxBounds = ( 15.948194, 5.651860, 3.020424 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone07"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone07"
					float(3) m_vMinBounds = ( -11.864393, -8.876785, -33.048046 )
					float(3) m_vMaxBounds = ( 4.450603, 15.147884, 3.880058 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone19"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone19"
					float(3) m_vMinBounds = ( -4.450604, -8.876785, -33.048046 )
					float(3) m_vMaxBounds = ( 11.864392, 15.147884, 3.880058 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone04"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone04"
					float(3) m_vMinBounds = ( -4.696189, -5.987200, -2.780869 )
					float(3) m_vMaxBounds = ( 4.696189, 2.097050, 5.186234 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone14"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone14"
					float(3) m_vMinBounds = ( -13.150639, -6.200571, -4.080750 )
					float(3) m_vMaxBounds = ( -0.796940, 3.509968, 1.771553 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone17"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone17"
					float(3) m_vMinBounds = ( 0.265284, -4.155831, -3.993217 )
					float(3) m_vMaxBounds = ( 24.311378, 7.678338, 4.257782 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone08"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone08"
					float(3) m_vMinBounds = ( -15.286642, -8.336849, -37.997059 )
					float(3) m_vMaxBounds = ( 5.706064, 24.612980, -0.138515 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone20"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone20"
					float(3) m_vMinBounds = ( -5.706062, -8.336868, -37.997066 )
					float(3) m_vMaxBounds = ( 15.286644, 24.612984, -0.138512 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone22"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone22"
					float(3) m_vMinBounds = ( -8.004932, -10.358698, -30.801556 )
					float(3) m_vMaxBounds = ( 5.759916, 11.726599, 0.497047 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone24"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone24"
					float(3) m_vMinBounds = ( -5.759904, -10.358698, -30.801556 )
					float(3) m_vMaxBounds = ( 8.004935, 19.487598, 0.497047 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone06"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone06"
					float(3) m_vMinBounds = ( -18.625599, 0.644394, -32.776829 )
					float(3) m_vMaxBounds = ( 13.516500, 12.123173, -1.021927 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone05"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone05"
					float(3) m_vMinBounds = ( -7.544029, -10.384434, -3.867226 )
					float(3) m_vMaxBounds = ( 7.308159, 7.097095, 14.031090 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "zanpakuto"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "zanpakuto"
					float(3) m_vMinBounds = ( -4.206707, -89.071823, -3.021858 )
					float(3) m_vMaxBounds = ( 3.660793, 17.498764, 3.018639 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone18"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone18"
					float(3) m_vMinBounds = ( 1.120621, -6.200573, -4.080750 )
					float(3) m_vMaxBounds = ( 13.474319, 3.509965, 1.771553 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone09"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone09"
					float(3) m_vMinBounds = ( -3.745533, -15.560095, -5.682182 )
					float(3) m_vMaxBounds = ( 4.401245, 4.722694, -0.043451 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone21"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone21"
					float(3) m_vMinBounds = ( -4.401262, -15.560091, -5.682182 )
					float(3) m_vMaxBounds = ( 3.745537, 4.722689, -0.043451 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone23"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone23"
					float(3) m_vMinBounds = ( -10.747952, -14.383598, -41.380920 )
					float(3) m_vMaxBounds = ( 7.432942, 27.225498, 0.103443 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone25"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone25"
					float(3) m_vMinBounds = ( -7.432940, -14.383602, -41.380966 )
					float(3) m_vMaxBounds = ( 10.747953, 27.225494, 0.103439 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Bone10"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Bone10"
					float(3) m_vMinBounds = ( -26.133097, 1.037144, -36.446003 )
					float(3) m_vMaxBounds = ( 26.133097, 14.525146, -0.343704 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				}
			]
		}
	]
}

CVanimGroup CVanimGroup_0
{
	string m_Name = ""
	CVReferenceSkeletonReference m_pReferenceSkeleton = CVReferenceSkeletonReference
	{
		CVReferenceSkeleton* m_pObject = NULL
		string m_sFileName = ""
	}
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVseqGroupReference m_pSeqGroup = CVseqGroupReference
	{
		CVseqGroup* m_pObject = NULL
		string m_sFileName = ""
	}
	CVanimGroupReference[] m_pAnimGroups = 
	[
		
	]
	CVanim[] m_Vanim = 
	[
		CVanim
		{
			string m_Animationname = "icg_anim"
			string m_Filepath = "models/icg_anim.FBX"
			int m_nStartframe = 105
			int m_nEndframe = 168
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			bool m_bDisable = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "atk1"
			string m_Filepath = "models/icg_anim.FBX"
			int m_nStartframe = 181
			int m_nEndframe = 206
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			bool m_bDisable = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "atk2"
			string m_Filepath = "models/icg_anim.FBX"
			int m_nStartframe = 222
			int m_nEndframe = 248
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			bool m_bDisable = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "run"
			string m_Filepath = "models/icg_anim.FBX"
			int m_nStartframe = 303
			int m_nEndframe = 314
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			bool m_bDisable = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_RUN"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "cast1"
			string m_Filepath = "models/icg_anim.FBX"
			int m_nStartframe = 396
			int m_nEndframe = 427
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			bool m_bDisable = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_1"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "cast2"
			string m_Filepath = "models/icg_anim.FBX"
			int m_nStartframe = 527
			int m_nEndframe = 557
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			bool m_bDisable = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "death"
			string m_Filepath = "models/icg_anim.FBX"
			int m_nStartframe = 335
			int m_nEndframe = 388
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			bool m_bDisable = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_DIE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		}
	]
	string[] m_sScripts = 
	[
		
	]
}

CVMaterialRemapList CVMaterialRemapList_0
{
	CVMaterialRemap[] m_vMaterialRemapList = 
	[
		CVMaterialRemap
		{
			string m_sSearchMaterial = "yihu_jhxcom_2003Â¸Ã021.vmat"
			string m_sReplaceMaterial = "materials/ic2.vmat"
		}
	]
}