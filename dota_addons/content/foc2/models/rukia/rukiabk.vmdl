<!-- schema text {7e125a45-3d83-4043-b292-9e24f8ef27b4} generic {198980d8-3a93-4919-b4c6-dd1fb07a3a4b} -->
CVModel CVModel_0
{
	CVmeshList m_meshList = CVmeshList
	{
		CVmesh[] m_meshList = 
		[
			CVmesh
			{
				string m_meshName = "rukiabk"
				string m_meshFile = "models/rukia/rukiabk.fbx"
				string m_materialSearchPath = ""
				bool m_bSkinParentedObjects = true
				bool m_bLegacySkinParentedTransforms = false
				bool m_bExpensiveTangents = false
				bool m_bExpensiveVertices = false
				bool m_bIgnoreCloth = false
				bool m_bGetSkinningFromLod0 = false
				CVmorphInfo* m_pMorphInfo = NULL
			}
		]
	}
	CVClothProxyMeshList m_clothProxyMeshList = CVClothProxyMeshList
	{
		CVClothProxyMesh[] m_clothProxyMeshList = 
		[
			
		]
		float m_flClothEnableThreshold = 0.050000
		bool m_bCreateStaticBone = false
		int m_nMaxBonesPerVertex = 4
		bool m_bRemoveUnusedBonesEnabled = false
		bool m_bDriveMeshesWithBacksolvedJointsOnly = true
		float m_flMatchProxiesToMeshes = 1.000000
		float m_flReservedFloat = 0.000000
		int m_nReservedInt = 0
		bool m_bReservedBool1 = false
		bool m_bReservedBool2 = false
		bool m_bReservedBool3 = false
		bool m_bReservedBool4 = false
	}
	CVphysicsMeshList m_physicsMeshList = CVphysicsMeshList
	{
		CVphysicsMesh[] m_meshList = 
		[
			
		]
	}
	CVmodelInfo* m_pModelInfo = NULL
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVhitBoxSetListReference[] m_pHitBoxSetLists = 
	[
		CVhitBoxSetListReference
		{
			CVhitBoxSetList* m_pObject = &CVhitBoxSetList_0
			string m_sFileName = ""
		}
	]
	CVattachmentListReference[] m_pAttachmentLists = 
	[
		
	]
	CVanimGroupReference[] m_pAnimGroups = 
	[
		CVanimGroupReference
		{
			CVanimGroup* m_pObject = &CVanimGroup_0
			string m_sFileName = ""
		}
	]
	CVNodeMaterialGroupListReference m_pMaterialGroupList = CVNodeMaterialGroupListReference
	{
		NodeMaterialGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVMeshGroupListReference m_pMeshGroupList = CVMeshGroupListReference
	{
		MeshGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVLODGroupListReference m_pLodGroupList = CVLODGroupListReference
	{
		LODGroupList_t* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropBreakableListReference m_pPropBreakableList = CVpropBreakableListReference
	{
		CVpropBreakableList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVpropDataListReference m_pPropDataList = CVpropDataListReference
	{
		CVpropDataList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVConstraintListReference[] m_pConstraintLists = 
	[
		
	]
	string m_collision = ""
	string m_softbody = ""
	string m_sMDLFilename = ""
	string[] m_sOffsetHitboxSets = 
	[
		
	]
	float(3) m_vHitboxSetOffset = ( 0.000000, 0.000000, 0.000000 )
	string[] m_scriptFiles = 
	[
		
	]
	CVMaterialRemapList* m_pMaterialRemapList = &CVMaterialRemapList_0
	float m_flFbxScale = 1.000000
	float m_flQCScale = 1.000000
	float(3) m_vOrigin = ( 0.000000, 0.000000, 0.000000 )
	CVPsf* m_pvPsf = NULL
	string m_keyValueText = ""
	bool m_bStaticProp = false
	bool m_bEnableClothProcessing = true
	float m_flClothEnableThreshold = 0.050000
	int m_nMaxClothVertsPerMesh = 2048
	bool m_bBuildClothBoneHierarchy = false
	symbol m_nNavType = AUTH_NAV_MESH
	bool m_bMakeUniqueVMeshes = false
	bool m_bMakeImplicitBindPoseSequence = false
	bool m_bAdjustSkeletonFromBoneFlags = false
}

CVhitBoxSetList CVhitBoxSetList_0
{
	CVhitBoxSet[] m_HitBoxSets = 
	[
		CVhitBoxSet
		{
			string m_name = "default"
			CVhitBox[] m_HitBoxes = 
			[
				CVhitBox
				{
					string m_name = "bone_waist"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_waist"
					float(3) m_vMinBounds = ( -24.218815, -19.942736, 9.116653 )
					float(3) m_vMaxBounds = ( 28.024364, 68.980392, 66.919800 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_chest"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_chest"
					float(3) m_vMinBounds = ( -18.187908, -13.579683, 0.447098 )
					float(3) m_vMaxBounds = ( 15.153813, 14.052013, 33.654617 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone04"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone04"
					float(3) m_vMinBounds = ( -13.190073, -9.330931, -26.017159 )
					float(3) m_vMaxBounds = ( 9.662346, 17.523159, -1.179260 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone05"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone05"
					float(3) m_vMinBounds = ( -13.742183, -5.286354, -25.802773 )
					float(3) m_vMaxBounds = ( 8.154099, 21.564209, -1.049248 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone08"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone08"
					float(3) m_vMinBounds = ( -16.701853, -10.918161, -13.637527 )
					float(3) m_vMaxBounds = ( 4.181366, 9.161501, 17.074265 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone13"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone13"
					float(3) m_vMinBounds = ( -5.759302, -11.206572, -16.279251 )
					float(3) m_vMaxBounds = ( 15.300169, 7.954580, 15.041275 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_footR"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_footR"
					float(3) m_vMinBounds = ( -21.082401, -8.269014, -59.582657 )
					float(3) m_vMaxBounds = ( 14.321419, 29.597021, 21.908455 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_footL"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_footL"
					float(3) m_vMinBounds = ( -15.590697, -8.354403, -59.760468 )
					float(3) m_vMaxBounds = ( 19.028084, 29.711636, 21.866043 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_handR"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_handR"
					float(3) m_vMinBounds = ( -24.182854, -7.575500, -21.715393 )
					float(3) m_vMaxBounds = ( 0.576221, 8.649883, 1.853027 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_handL"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_handL"
					float(3) m_vMinBounds = ( -1.677876, -7.582363, -22.266449 )
					float(3) m_vMaxBounds = ( 23.635296, 8.622105, 1.562210 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new0"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new0"
					float(3) m_vMinBounds = ( -20.863430, -39.667633, -30.955330 )
					float(3) m_vMaxBounds = ( 13.347412, 29.971876, 19.727005 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new2"
					float(3) m_vMinBounds = ( -13.325201, -39.667633, -31.464149 )
					float(3) m_vMaxBounds = ( 21.252882, 26.983931, 19.218506 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Object10"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Object10"
					float(3) m_vMinBounds = ( -6.210100, -17.984871, -15.463533 )
					float(3) m_vMaxBounds = ( 3.539900, 6.952623, -1.791656 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "Object09"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "Object09"
					float(3) m_vMinBounds = ( -4.252703, -19.529682, -14.517122 )
					float(3) m_vMaxBounds = ( 5.497297, 5.470314, -0.860870 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "shou2"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "shou2"
					float(3) m_vMinBounds = ( -11.749199, -150.901428, -15.495071 )
					float(3) m_vMaxBounds = ( 6.390541, 45.018742, 4.438507 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_head"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_head"
					float(3) m_vMinBounds = ( -17.802502, -18.056185, -10.914246 )
					float(3) m_vMaxBounds = ( 12.414581, 19.089411, 36.268723 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "shou"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "shou"
					float(3) m_vMinBounds = ( -8.346897, -6.354843, -14.889114 )
					float(3) m_vMaxBounds = ( 10.265099, 31.214523, 2.694046 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new1"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new1"
					float(3) m_vMinBounds = ( -19.386105, -41.595798, -52.028522 )
					float(3) m_vMaxBounds = ( 25.050297, 37.055073, 9.474991 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				},
				CVhitBox
				{
					string m_name = "bone_new3"
					string m_sSurfaceProperty = ""
					int m_nGroupId = 0
					string m_sBoneName = "bone_new3"
					float(3) m_vMinBounds = ( -24.678478, -41.595798, -52.028522 )
					float(3) m_vMaxBounds = ( 18.680767, 36.407047, 9.475304 )
					uint(4) m_cRenderColor = ( 0, 0, 0, 0 )
				}
			]
		}
	]
}

CVanimGroup CVanimGroup_0
{
	string m_Name = ""
	CVReferenceSkeletonReference m_pReferenceSkeleton = CVReferenceSkeletonReference
	{
		CVReferenceSkeleton* m_pObject = NULL
		string m_sFileName = ""
	}
	CVBoneFlagListReference m_pBoneFlagList = CVBoneFlagListReference
	{
		CVBoneFlagList* m_pObject = NULL
		string m_sFileName = ""
	}
	CVseqGroupReference m_pSeqGroup = CVseqGroupReference
	{
		CVseqGroup* m_pObject = NULL
		string m_sFileName = ""
	}
	CVanimGroupReference[] m_pAnimGroups = 
	[
		
	]
	CVanim[] m_Vanim = 
	[
		CVanim
		{
			string m_Animationname = "rukiabk_anim"
			string m_Filepath = "models/rukia/rukiabk_anim.FBX"
			int m_nStartframe = 11
			int m_nEndframe = 42
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_IDLE"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "RUN"
			string m_Filepath = "models/rukia/rukiabk_anim.FBX"
			int m_nStartframe = 177
			int m_nEndframe = 198
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = true
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_RUN"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "ATK1"
			string m_Filepath = "models/rukia/rukiabk_anim.FBX"
			int m_nStartframe = 56
			int m_nEndframe = 83
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "ATK2"
			string m_Filepath = "models/rukia/rukiabk_anim.FBX"
			int m_nStartframe = 97
			int m_nEndframe = 122
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_ATTACK2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "CAST1"
			string m_Filepath = "models/rukia/rukiabk_anim.FBX"
			int m_nStartframe = 138
			int m_nEndframe = 162
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_2"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		},
		CVanim
		{
			string m_Animationname = "CAST2"
			string m_Filepath = "models/rukia/rukiabk_anim.FBX"
			int m_nStartframe = 58
			int m_nEndframe = 83
			float m_flFps = 30.000000
			CAnimationLoop m_Loop = CAnimationLoop
			{
				bool m_bLoop = false
				bool m_bSmoothLoop = false
				int m_nSmoothLoopStart = 0
				int m_nSmoothLoopEnd = 0
				CVAnimCmdStartLoop m_StartLoop = CVAnimCmdStartLoop
				{
					bool m_bEnabled = false
					int m_nLoopRestart = 0
				}
			}
			bool m_bHidden = false
			CActivity[] m_Activities = 
			[
				CActivity
				{
					string m_Name = "ACT_DOTA_CAST_ABILITY_1"
					int m_nWeight = 1
				}
			]
			CAnimationEvent[] m_AnimationEvents = 
			[
				
			]
			CMotionFrame[] m_MotionFrames = 
			[
				
			]
			CIKrule*[] m_pIkRules = 
			[
				
			]
			CAlignAnimation* m_pAlignAnimation = NULL
			CAdjustAnimation m_adjustAnimation = CAdjustAnimation
			{
				float(3) m_translation = ( 0.000000, 0.000000, 0.000000 )
				float(3) m_rotation = ( 0.000000, 0.000000, 0.000000 )
			}
			string[] m_Keywords = 
			[
				
			]
			CVAnimResourceSequenceParams m_sequenceParams = CVAnimResourceSequenceParams
			{
				float m_flFadeInTime = 0.200000
				float m_flFadeOutTime = 0.200000
			}
		}
	]
	string[] m_sScripts = 
	[
		
	]
}

CVMaterialRemapList CVMaterialRemapList_0
{
	CVMaterialRemap[] m_vMaterialRemapList = 
	[
		CVMaterialRemap
		{
			string m_sSearchMaterial = "rukia_21.vmat"
			string m_sReplaceMaterial = "materials/rukia/rukiabk.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "rukia_22.vmat"
			string m_sReplaceMaterial = "materials/rukia/rukiabk.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "rukia_23.vmat"
			string m_sReplaceMaterial = "materials/rukia/rukiabk.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "rukia_24.vmat"
			string m_sReplaceMaterial = "materials/rukia/rukiabk.vmat"
		},
		CVMaterialRemap
		{
			string m_sSearchMaterial = "rukia_25.vmat"
			string m_sReplaceMaterial = "materials/rukia/rukiabk.vmat"
		}
	]
}